{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "GAMEDAY!",
  "Outputs": {
  },
  "Parameters": {
    "AppServerInstanceType": {
        "AllowedValues": [ "t1.micro","m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge" ], 
        "Default": "c1.medium",
        "Description": "The instance type used for app servers.",
        "Type": "String"
    },
    "BucketName": {
        "Default": "gamedayregulators",
        "Description": "The name of the bucket.",
        "Type": "String"
    },
    "PreferredAvailabilityZones": {
        "Description": "Availability zones to deploy into for Autoscaling Group and ELB.",
        "Default" : "us-east-1b",
        "Type": "CommaDelimitedList"
    },
    "AppServerMaximumQuantity": {
        "Default": "60",
        "Description": "Maximum number of instances in the primary ASG.",
        "MaxValue": "84",
        "MinValue": "1",
        "Type": "Number"
    },
    "AppServerMinimumQuantity": {
        "Default": "4",
        "Description": "The bare minimum of instances to run in the primary ASG.",
        "MaxValue": "100",
        "MinValue": "1",
        "Type": "Number"
    },
    "AutoScaleCooldown" : {
        "Description" : "Number of seconds to wait between auto-scale actions. Must be between 60 and 3600.",
        "Type" : "Number",
        "Default" : "300",
        "MinValue" : "60",
        "MaxValue" : "3600"
    },
    "KeyName": {
        "AllowedPattern": ".+",
        "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
        "Type": "String",
        "Default" : "gameday"
    },
    "CPULowThreshold" : {
        "Default": "30",
        "Description": "The threshold for scaling group cpu usage at which instances will be removed.",
        "MaxValue": "100",
        "MinValue": "1",
        "Type": "Number"
    },
    "CPUHighThreshold" : {
        "Default": "40",
        "Description": "The threshold for scaling group cpu usage at which instances will be added.",
        "MaxValue": "100",
        "MinValue": "1",
        "Type": "Number"
    },
    "messagesHighThreshold" : {
      "Default" : "100",
      "Type" : "Number"
    },
    "AppServerAMI" : {
        "Description" : "The AMI to launch.",
        "Type" : "String",
        "Default" : "ami-51792c38"
    },
    "ScaleAdjustmentType" : {
        "Description" : "Specifies whether the ScalingAdjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
        "AllowedValues": [ "ChangeInCapacity", "ExactCapacity", "PercentChangeInCapacity" ],
        "Type" : "String",
        "Default" : "ChangeInCapacity"
    },
    "ScaleUpIncrement" : {
        "Default": "2",
        "Description": "The number of instances to scale up under normal load.",
        "MaxValue": "100",
        "MinValue": "1",
        "Type": "Number"
    },
    "ScaleDownIncrement" : {
        "Default": "-2",
        "Description": "The value to scale down by.  Needs to be negative!",
        "MaxValue": "-1",
        "MinValue": "-100",
        "Type": "Number"
    }
  },

  "Resources": {
    "instanceProfile" : {
       "Type": "AWS::IAM::InstanceProfile",
       "Properties": {
          "Path": "/gameday/",
          "Roles": [ { "Ref" : "role" } ]
       }
    },
    "role" : {
       "Type": "AWS::IAM::Role",
       "Properties": {
         "Path" : "/product/",
         "AssumeRolePolicyDocument": {
            "Statement": [ {
               "Effect": "Allow",
               "Principal": {
                  "Service": [ "ec2.amazonaws.com" ]
               },
               "Action": [ "sts:AssumeRole" ]
            } ]
         },
         "Policies": [ {
            "PolicyName": "root",
            "PolicyDocument": {
              "Statement" : [
                {
                  "Effect":"Allow",
                  "Action":["cloudformation:DescribeStackResource", "cloudformation:DescribeStacks"],
                  "Resource":"*"
                },
                {
                  "Effect": "Allow",
                  "Action": [ "s3:*" ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": ["sns:ListTopics","sns:Publish"],
                  "Resource" : "*"
                },
                {
                  "Effect": "Allow",
                  "Action": "EC2:Describe*",
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [ "sqs:*" ],
                  "Resource": "*"
                },
                {
                    "Effect" : "Allow",
                    "Action" : "cloudwatch:*",
                    "Resource" : "*"
                },
                {
                  "Action": [
                    "autoscaling:DescribeAutoScalingGroups",
                    "autoscaling:DescribeAutoScalingInstances",
                    "autoscaling:DescribeAutoScalingNotificationTypes",
                    "autoscaling:DescribeLaunchConfigurations",
                    "autoscaling:DescribeMetricCollectionTypes",
                    "autoscaling:DescribeNotificationConfigurations",
                    "autoscaling:DescribePolicies",
                    "autoscaling:DescribeScalingActivities",
                    "autoscaling:DescribeScalingProcessTypes",
                    "autoscaling:DescribeScheduledActions",
                    "autoscaling:DescribeTags",
                    "autoscaling:DescribeTriggers",
                    "autoscaling:ResumeProcesses",
                    "autoscaling:SuspendProcesses"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*"
                  ]
                }  
           ]
            }
            } ]
         }
    },
    
    "appSecurityGroup" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "For app servers.",
          "SecurityGroupIngress" : [
          {
            "IpProtocol" : "tcp",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : "0.0.0.0/0"
          }
        ]
      }
    },
    "appServerAutoScalingLaunchConfiguration" : {
        "Type" : "AWS::AutoScaling::LaunchConfiguration",
        "Properties" : {
            "EbsOptimized" : "false",
            "ImageId" : { "Ref" : "AppServerAMI" },
            "InstanceType" : { "Ref" : "AppServerInstanceType" },
            "KeyName" : { "Ref" : "KeyName" },
            "IamInstanceProfile" : {"Ref" : "instanceProfile"},
            "SecurityGroups" : [ { "Ref" : "appSecurityGroup" } ],
            "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#cloud-config\n",
            "runcmd:\n",
            " - /opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackName" }, " -r appServerAutoScalingLaunchConfiguration ",
            " --region ", { "Ref" : "AWS::Region" }, " && ",
            "yum install -y ImageMagick &&",
            "easy_install argparse &&",
            "mkdir /home/ec2-user/jobs &&",
            "wget -O /home/ec2-user/image_processor.py https://awsu-arch.s3.amazonaws.com/aux/technical-exercises/day-2/lab_1_create_batch_processing_cluster/image_processor.py && ",
            "chmod +x /home/ec2-user/image_processor.py && ",
            "export INPUT_QUEUE=", { "Fn::GetAtt" : ["sqsInputQueue", "QueueName"]}, " && ",
            "export OUTPUT_QUEUE=",{ "Fn::GetAtt" : ["sqsOutputQueue", "QueueName"]}, " && ",
            "export S3_BUCKET=",{ "Ref": "gamedaybucket" }, " && " ,
            "/usr/bin/python /home/ec2-user/image_processor.py --input-queue $INPUT_QUEUE --output-queue $OUTPUT_QUEUE --s3-output-bucket $S3_BUCKET & ",
            "/usr/bin/python /home/ec2-user/image_processor.py --input-queue $INPUT_QUEUE --output-queue $OUTPUT_QUEUE --s3-output-bucket $S3_BUCKET & "
                        ]]}
            }
        },
        "Metadata" : {
          "AWS::CloudFormation::Init" : {
            "config" : {
              "files" : {
              },
              "packages" : {
              }
            }
          }
        }
    },
    "appServerAutoScalingGroup" : {
        "Type" : "AWS::AutoScaling::AutoScalingGroup",
        "Properties" :{
            "AvailabilityZones" : { "Ref" : "PreferredAvailabilityZones" },
            "LaunchConfigurationName" : { "Ref" : "appServerAutoScalingLaunchConfiguration" },
            "MinSize" : { "Ref" : "AppServerMinimumQuantity" },
            "MaxSize" : { "Ref" : "AppServerMaximumQuantity" },
            "HealthCheckGracePeriod" : "1800",
            "HealthCheckType" : "ELB",
            "Tags" : [
                    {"Key" : "Name", "Value" : "gameday-server", "PropagateAtLaunch" : "true"}
            ],
            "NotificationConfiguration" : {
                "TopicARN" : { "Ref" : "productAutoScalingEventSNS" },
                "NotificationTypes" : ["autoscaling:EC2_INSTANCE_LAUNCH", "autoscaling:EC2_INSTANCE_LAUNCH_ERROR", "autoscaling:EC2_INSTANCE_TERMINATE", "autoscaling:EC2_INSTANCE_TERMINATE_ERROR", "autoscaling:TEST_NOTIFICATION"]
            }
        }
    },
    "appServerScaleUpPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : { "Ref" : "ScaleAdjustmentType"},
        "AutoScalingGroupName" : { "Ref" : "appServerAutoScalingGroup" },
        "Cooldown" : { "Ref" : "AutoScaleCooldown" },
        "ScalingAdjustment" : { "Ref" : "ScaleUpIncrement" }
      }
    },
    "appServerScaleDownPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : { "Ref" : "ScaleAdjustmentType"},
        "AutoScalingGroupName" : { "Ref" : "appServerAutoScalingGroup" },
        "Cooldown" : { "Ref" : "AutoScaleCooldown" },
        "ScalingAdjustment" : { "Ref" : "ScaleDownIncrement" }
      }
    },
    "appServerCPUAlarmHigh": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
            "EvaluationPeriods": "2",
            "Statistic": "Average",
            "Threshold": { "Ref" : "CPUHighThreshold" },
            "AlarmDescription": "Alarm if CPU too high or metric disappears indicating instance is down",
            "Period": "60",
            "AlarmActions": [
                { "Ref": "appServerScaleUpPolicy" }
            ],
            "Namespace": "AWS/EC2",
            "Dimensions": [
            {
                "Name": "AutoScalingGroupName",
                "Value": {
                    "Ref": "appServerAutoScalingGroup"
                }
            }
            ],
            "ComparisonOperator": "GreaterThanThreshold",
            "MetricName": "CPUUtilization"
        }
    },
    "appServerCPUAlarmLow": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "5",
        "Statistic": "Average",
        "Threshold": { "Ref" : "CPULowThreshold" },
        "AlarmDescription": "Alarm if CPU too high or metric disappears indicating instance is down",
        "Period": "300",
        "AlarmActions": [
          { "Ref": "appServerScaleDownPolicy" }
        ],
        "Namespace": "AWS/EC2",
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "appServerAutoScalingGroup"
            }
          }
        ],
        "ComparisonOperator": "LessThanThreshold",
        "MetricName": "CPUUtilization"
      }
    },
    "messagesHighAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "5",
        "Statistic": "Average",
        "Threshold": { "Ref" : "messagesHighThreshold" },
        "AlarmDescription": "Alarm if there are a high number of messages",
        "Period": "300",
        "AlarmActions": [
          { "Ref": "appServerScaleUpPolicy" }
        ],
        "Namespace": "AWS/SQS",
        "Dimensions": [
          {
            "Name": "QueueName",
            "Value": {
              "Ref": "sqsInputQueue"
            }
          }
        ],
        "ComparisonOperator": "GreaterThanThreshold",
        "MetricName": "ApproximateNumberOfMessagesVisible"
      }
    },
    
    "productAutoScalingEventSNS" : {
        "Type" : "AWS::SNS::Topic"
    },
    "gamedaybucket" : {
        "Type" : "AWS::S3::Bucket",
        "Properties" : {
          "BucketName" : { "Fn::Join" : ["", ["gamedaybucket", { "Ref" : "AWS::StackName" }] ] }
       }
    },
    "sqsInputQueue" : {
      "Type" : "AWS::SQS::Queue",
      "Properties" : {
        "QueueName": { "Fn::Join" : ["-", ["sqsinput", { "Ref" : "AWS::StackName" }] ] }
      }
    },
    "sqsOutputQueue" : {
      "Type" : "AWS::SQS::Queue",
      "Properties" : {
        "QueueName": { "Fn::Join" : ["-", ["sqsoutput", { "Ref" : "AWS::StackName" }] ] }
      }
    }  
    
    
}
}
